@use '../../animations/components/KonSelect/ToggleOptions_default';
@use '../../animations/components/KonSelect/ToggleOptions_detached';
@use '../../animations/components/KonSelect/OptionsListFilter';

@use 'KonSelectOptionsList';

@use '../../animations/components/KonSelectMultiple/ChipList';

.kon-select-multiple{
    --font-size: .8rem;
    --radius: 12px;
    --konponent-color: var(--primary-color);
    --open-transition-duration: 250ms;
    --current-background-color: rgba(var(--background-color), 1);
    --current-foreground-color: rgba(var(--foreground-color), 1);
    --chip-background-color: rgba(var(--background-active-color), 1);
    position: relative;
    padding: 8px 12px;
    padding-left: 8px;
    background: var(--current-background-color);
    border-radius: 12px;
    user-select: none;
    min-width: 200px;
    max-width: 100%;
    cursor: pointer;
    transition-property: border-radius, transform, background, filter, padding;
    transition-timing-function: ease;
    transition-duration: 250ms;
    font-size: var(--font-size);
    z-index: 2;
    &:hover, &:focus, &:focus-within{
        --current-background-color: rgb(var(--background-active-color));
        // transform: translateY(-4px);
        /* Use filter instead of box shadow since we are applying a shadow to the shole thing and we don't want overlaps */
        filter: drop-shadow( 0 0 20px rgba(var(--konponent-color), 0.1) );
    }
    &.open{
        transform: translateY(-4px);
    }
    &.open:not(.detached){
        border-radius: 12px 12px 0px 0px;
    }
    &.disabled{
        pointer-events: none;
        opacity: .6;
    }
    .kon-multiple-fallback{
        position: absolute;
        top: 0;
        left: 0;
        opacity: 0;
        pointer-events: none;
    }
    .kon-placeholder{
        /* Add back the removed 4px from main padding since the chips do have padding themselves */
        padding-left: 4px;
        &-hidden{
            opacity: 0;
        }
    }
    .kon-placeholder, .kon-values{
        /* Allow it to have a z-index */
        position: relative;
        // display: flex;
        align-items: center;
        color: rgba(var(--foreground-color), 0.4);
        transition: opacity 250ms ease;
        /* Text must stay on top of the option menu to prevent getting occluded during the reveal transition */
        z-index: 2;
    }
    .kon-placeholder + .kon-values{
        /*
        These 2 elements don't usually live together unless there's no more chips to show
        in which case kon-values collapses and gets moved below kon-placeholder, to prevent
        the element from jumping when the last element is removed we convert the kon-values
        into an absolute element
        */
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
    }
    .kon-filter-input{
        display: inline-block;
        flex: 1;
        max-width: 100%;
        min-width: 40px;
        transition-property: opacity, transform;
        transition-duration: 250ms;
        transition-timing-function: ease;
        color: var(--current-foreground-color);
        background: none;
        border: none;
        z-index: 3;
    }
    .kon-values{
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        .kon-value-chip{
            position: relative;
            display: inline-flex;
            align-items: center;
            border: none;
            cursor: pointer;
            background: none;
            transition-property: opacity, transform;
            transition-duration: 250ms;
            transition-timing-function: ease;
            padding: 0px 8px;
            padding-right: 12px;
            color: var(--current-foreground-color);
            // &:active{
            //     transform: translateY(2px);
            // }
            &::before{
                content: '';
                display: inline-block;
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 26px;
                top: 50%;
                transform: translateY(-50%);
                border-radius: 10px;
                background: var(--chip-background-color);
                border: 2px solid rgb(var(--background-color));
                z-index: -1;
            }
            .kon-chip-remove{
                position: absolute;
                width: 16px;
                height: 16px;
                border-radius: 50%;
                right: -8px;
                background: rgb(var(--background-color));
                border: 2px solid var(--chip-background-color);
                transition-property: background, color;
                transition-duration: 250ms;
                transition-timing-function: ease;
                &:hover{
                    background: rgb(var(--danger-color));
                    background: red;
                    // border-color: rgb(var(--background-color));
                    &::before, &::after{
                        background: #FFF;
                    }
                }
                &::before, &::after{
                    content: '';
                    display: block;
                    position: absolute;
                    width: 8px;
                    height: 1px;
                    left: 50%;
                    top: 50%;
                    background: var(--current-foreground-color);
                    transition: background 250ms ease;
                }
                &::before{
                    transform: translate(-50%, -50%) rotate(45deg);
                }
                &::after{
                    transform: translate(-50%, -50%) rotate(-45deg);
                }
            }
        }
    }
}