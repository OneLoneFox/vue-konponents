.kon-checkbox{
    --radius: 6px;
    --font-size: 1rem;
    --konponent-color: var(--primary-color);
    --current-background-color: rgba(var(--background-color), 1);
    position: relative;
    display: inline-flex;
    align-items: center;
    font-size: var(--font-size);
    user-select: none;
    &.disabled{
        opacity: .6;
        pointer-events: none;
    }
    &.readonly{
        pointer-events: none;
    }
    & > .kon-checkbox-content{
        position: relative;
        width: 24px;
        height: 24px;
        & > input{
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            margin: 0;
            cursor: pointer;
            &:hover:not(:checked), &:focus-visible:not(:checked){
                & + .kon-checkmark::before{
                    --border-width: 3px;
                    --border-color: rgb(var(--konponent-color));
                }
            }
            &:checked:hover, &:checked:focus-visible{
                & + .kon-checkmark::before{
                    --glow-intensity: 8px;
                    --glow-opacity: .6;
                }
            }
        }
        & > .kon-checkmark{
            display: flex;
            align-items: center;
            justify-content: center;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            &::before{
                --border-width: 2px;
                --border-color: var(--current-background-color);
                --glow-intensity: 0px;
                --glow-opacity: 0;
                content: '';
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                border-radius: var(--radius);
                // a box shadow can do subpixel animation whereas a border cannot
                box-shadow: 
                    inset 0 0 0 var(--border-width) var(--border-color),
                    0 0 var(--glow-intensity) 0 rgba(var(--konponent-color), var(--glow-opacity));
                box-sizing: border-box;
                transition: all 250ms ease;
            }
            & > .kon-checkmark-tick{
                /*
                 * The only reason this is made with css and pseudo elements instead of an svg
                 * is because I want to animate it.
                 */
                position: relative;
                height: 12px;
                width: 8px;
                margin-top: -3px;
                /* Fun fact (not really): If you try to do the same but swap width with height then rotate -45deg
                 * and swap the two pieces of the check-mark you'll get a glitch where the short part of
                 * the mark will be thicker. but if you remove the 45deg rotation from this you get the same
                 * glitch without rotation and it gets fixed after rotating...
                 * I could not find any info on this bug.
                 * It also happens if you try to tweak the width and height of this element.
                 * No matter how experienced you are with css you'll always find weird sh*t like this.
                 */
                transform: rotate(45deg);
                &::before, &::after{
                    content: '';
                    display: block;
                    position: absolute;
                    background-color: #FFF;
                    transition-property: width, height;
                    transition-timing-function: ease;
                    transition-duration: 150ms;
                }
                &::before{
                    // short segment - unchecked state
                    bottom: 0;
                    right: 0;
                    width: 0;
                    height: 2px;
                    border-radius: 2px 0 0 2px;
                    transition-delay: 0ms;
                }
                &::after{
                    // long segment - unchecked state
                    right: 0;
                    top: 0;
                    width: 2px;
                    height: 0;
                    border-radius: 2px 2px 0 0;
                    transition-delay: 150ms;
                }
            }
        }
    }
    & > .kon-checkbox-label{
        cursor: pointer;
        padding: 0 6px;
        color: rgba(var(--foreground-color), 1);
    }
    &.checked{
        & > .kon-checkbox-content{
            & > .kon-checkmark{
                & > .kon-checkmark-tick{
                    &::before, &::after{
                        transition-duration: 150ms;
                    }
                    &::before{
                        // short segment - checked state
                        width: 100%;
                        transition-delay: 300ms;
                    }
                    &::after{
                        // long segment - checked state
                        height: 100%;
                        transition-delay: 150ms;
                    }
                }
                &::before{
                    --border-width: 12px;
                    --border-color: rgb(var(--konponent-color));
                }
            }
        }
    }
}