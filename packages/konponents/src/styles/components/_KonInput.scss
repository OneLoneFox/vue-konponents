@use '../animations/components/ToggleMessage';

/* The label can be elevated from either user focus or fulfilled value */
@mixin elevated-placeholder {
    --current-label-color: rgba(var(--foreground-color), 1);
    --current-label-elevation-offset: -80%;
    pointer-events: auto;
    transform: translate(8px, -80%);
}

.kon-input{
    --radius: 12px;
    --margin: 10px;
    --input-padding: 8px 10px;
    --input-padding-left: 10px;
    --current-background-color: rgba(var(--background-color), 1);
    --current-foreground-color: rgba(var(--foreground-color), 1);
    --current-label-color: rgba(var(--foreground-color), 1);
    --current-label-elevation-offset: -80%;
    position: relative;
    margin: var(--margin);
    transition-property: opacity;
    transition-duration: 250ms;
    transition-timing-function: ease;
    width: 200px;
    // font-size: var(--font-size);
    &.has-label{
        margin-top: 22px;
    }
    &.no-margin{
        --margin: 0px;
    }
    &.error{
        & > .kon-input-label{
            color: rgb(var(--danger-color));
            animation: shake-label 500ms ease;
        }
        & > .kon-input-message{
            color: rgb(var(--danger-color));
            animation: shake-message 500ms ease;
        }
    }
    &.warning{
        & > .kon-input-label{
            color: rgb(var(--warning-color));
        }
        & > .kon-input-message{
            color: rgb(var(--warning-color));
        }
    }
    &.success{
        & > .kon-input-label{
            color: rgb(var(--success-color));
        }
        & > .kon-input-message{
            color: rgb(var(--success-color));
        }
    }
    &.disabled{
        opacity: .6;
        pointer-events: none;
    }
    > input{
        width: 100%;
        border: none;
        transition-property: padding, background, color, box-shadow;
        transition-timing-function: ease;
        transition-duration: 250ms;
        border-radius: var(--radius);
        padding: var(--input-padding);
        padding-left: var(--input-padding-left);
        color: rgba(var(--foreground-color), 1);
        background: var(--current-background-color);
        &::placeholder{
            transition: opacity 250ms ease;
            color: rgba(var(--foreground-color), .4);
            opacity: 1;
        }
        &:focus{
            --current-background-color: rgb(var(--background-active-color));
            box-shadow: 0 0 20px 0 rgba(var(--primary-color), 0.1);
            &::placeholder{
                opacity: 0;
            }
            padding-left: calc(var(--input-padding-left) + 6px);
            & ~ .is-placeholder{
                @include elevated-placeholder;
                transform: translate(8px, -77%);
            }
        }
    }
    > .kon-input-label{
        position: absolute;
        display: flex;
        align-items: center;
        top: 0;
        left: 0;
        height: 100%;
        font-size: .8rem;
        transform: translate(8px, var(--current-label-elevation-offset));
        color: var(--current-label-color);
        &.is-placeholder{
            --current-label-color: rgba(var(--foreground-color), .4);
            --current-label-elevation-offset: 0;
            // passthrough events while on placeholder mode
            pointer-events: none;
            transition-property: transform, color;
            transition-timing-function: ease;
            transition-duration: 250ms;
            transform: translate(10px, var(--current-label-elevation-offset));
            &.elevated{
                @include elevated-placeholder;
            }
        }
    }
    > .kon-input-message{
        position: absolute;
        padding: 0 8px;
        left: 0;
        top: calc(100% + 2px);
        font-size: .7rem;
        color: var(--current-label-color);
    }
    &.has-leading-icon{
        & > input{
            --input-padding-left: 36px;
        }
    }
    &.has-trailing-icon{
        & > input{
            padding-right: 36px;
        }
    }
    .kon-input-icon{
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        top: 0;
        padding: 2px;
        &.leading{
            left: 0;
            .kon-input-icon-content{
                box-shadow: 4px 0 4px -4px rgba(0, 0, 0, .1);
            }
        }
        &.trailing{
            right: 0;
            .kon-input-icon-content{
                box-shadow: -4px 0 4px -4px rgba(0, 0, 0, .1);
            }
        }
        .kon-input-icon-content{
            padding: 6px;
            align-items: center;
            justify-content: center;
            display: flex;
            // background: rgba(var(--background-color), 1);
            border-radius: calc(var(--radius) - 2px);
        }
    }
}

@keyframes shake-message {
    10%, 90% {
        transform: translate(-1px, 0);
    }
    
    20%, 80% {
        transform: translate(2px, 0);
    }

    30%, 50%, 70% {
        transform: translate(-4px, 0);
    }

    40%, 60% {
        transform: translate(4px, 0);
    }
}

@keyframes shake-label {
    10%, 90% {
        transform: translate(7px, var(--current-label-elevation-offset));
    }
    
    20%, 80% {
        transform: translate(10px, var(--current-label-elevation-offset));
    }

    30%, 50%, 70% {
        transform: translate(4px, var(--current-label-elevation-offset));
    }

    40%, 60% {
        transform: translate(12px, var(--current-label-elevation-offset));
    }
}